name: MSK Bot Runner
concurrency:
  group: msk-bot-runner
  cancel-in-progress: true
on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Bot Mode'
        type: choice
        required: true
        options:
          - normal
          - matchmaking
          - tournament
      tournament_id:
        description: 'Tournament ID (if tournament mode)'
        type: string
        required: false
      team_id:
        description: 'Team ID (optional)'
        type: string
        required: false
      password:
        description: 'Tournament password (optional)'
        type: string
        required: false
  schedule:
    - cron: '0 */6 * * *' # Every 6 hours
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'config.yml'
permissions:
  actions: write
  contents: write
jobs:
  bot-runner:
    runs-on: ubuntu-latest
    timeout-minutes: 355
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install tenacity pyyaml

      - name: Prepare Engine Permissions
        run: |
          echo "Setting permissions for engines..."
          if [ -f engines/stockfish ]; then
            chmod +x engines/stockfish
            echo "Stockfish ready"
          else
            echo "Error: stockfish not found!"
            exit 1
          fi
          if [ -f engines/fsf-latest ]; then
            chmod +x engines/fsf-latest
            echo "Fairy-Stockfish ready"
          else
            echo "Warning: fsf-latest not found, skipping"
          fi
          ls -l engines/

      - name: Inject MSK Bot Token
        env:
          MSK_TOKEN: ${{ secrets.MSK_TOKEN }}
        run: |
          if [ -z "$MSK_TOKEN" ]; then
            echo "Error: MSK_TOKEN missing!"
            exit 1
          fi
          TOKEN=$(echo "$MSK_TOKEN" | tr -d '\n\r')
          cat << EOF > config.yml
token: "$TOKEN"
# MSK Chess OAuth2 Token
engines:
  path: "./engines/stockfish"
EOF
          echo "Config created"

      - name: Verify config.yml
        run: |
          cat config.yml || { echo "Error: config.yml missing"; exit 1; }
          if ! grep -q "^engines:" config.yml; then
            echo "Error: engines section missing"
            exit 1
          fi
          echo "Config verified"

      - name: Launch Bot
        run: |
          echo "Starting bot..."
          python3 -u user_interface.py ${{ github.event.inputs.mode || 'normal' }}

      - name: Auto-Restart After Timeout
        run: |
          sleep 20700 && echo "Restarting bot..." && kill -SIGTERM $! &
          wait $!
          echo "Bot ended"
